syntax = "proto3";

package inventory;

option go_package = "proto/inventory";

import "google/protobuf/timestamp.proto";

service ProductService {
  rpc CreateProduct(CreateProductRequest) returns (ProductResponse);
  rpc GetProduct(ProductIDRequest) returns (ProductResponse);
  rpc UpdateProduct(UpdateProductRequest) returns (ProductResponse);
  rpc DeleteProduct(ProductIDRequest) returns (DeleteResponse);
  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
  rpc CheckStock(CheckStockRequest) returns (CheckStockResponse);
}

message ProductIDRequest {
  string id = 1;
}

message CreateProductRequest {
  string name = 1;
  string description = 2;
  double price = 3;
  int32 stock = 4;
  string category_id = 5;
  string frame_size = 6;
  string wheel_size = 7;
  string color = 8;
  double weight = 9;
  string bike_type = 10;
}

message UpdateProductRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  int32 stock = 5;
  string category_id = 6;
  string frame_size = 7;
  string wheel_size = 8;
  string color = 9;
  double weight = 10;
  string bike_type = 11;
}

message ProductResponse {
  string id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  int32 stock = 5;
  string category_id = 6;
  string frame_size = 7;
  string wheel_size = 8;
  string color = 9;
  double weight = 10;
  string bike_type = 11;
  google.protobuf.Timestamp created_at = 12;
  google.protobuf.Timestamp updated_at = 13;
}

message ProductFilter {
  string category_id = 1;
  double min_price = 2;
  double max_price = 3;
  bool in_stock = 4;
  string bike_type = 5;
  string frame_size = 6;
  string wheel_size = 7;
  string color = 8;
  double max_weight = 9;
  int32 page = 10;
  int32 page_size = 11;
}

message DeleteResponse {
  bool success = 1;
  string message = 2;
}

message ListProductsRequest {
  ProductFilter filter = 1;
}

message ListProductsResponse {
  repeated ProductResponse products = 1;
  int32 total = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message CheckStockRequest {
  repeated ProductQuantity items = 1;
}

message ProductQuantity {
  string product_id = 1;
  int32 quantity = 2;
}

message CheckStockResponse {
  bool available = 1;
  repeated ProductQuantity unavailable_items = 2;
}